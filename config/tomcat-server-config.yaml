apiVersion: v1
data:
  server.xml: "<?xml version='1.0' encoding='utf-8'?>\n<!--\n  Licensed to the Apache
    Software Foundation (ASF) under one or more\n  contributor license agreements.
    \ See the NOTICE file distributed with\n  this work for additional information
    regarding copyright ownership.\n  The ASF licenses this file to You under the
    Apache License, Version 2.0\n  (the \"License\"); you may not use this file except
    in compliance with\n  the License.  You may obtain a copy of the License at\n\n
    \     http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable
    law or agreed to in writing, software\n  distributed under the License is distributed
    on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
    express or implied.\n  See the License for the specific language governing permissions
    and\n  limitations under the License.\n-->\n<!-- Note:  A \"Server\" is not itself
    a \"Container\", so you may not\n     define subcomponents such as \"Valves\"
    at this level.\n     Documentation at /docs/config/server.html\n -->\n<Server
    port=\"8005\" shutdown=\"SHUTDOWN\">\n  <Listener className=\"org.apache.catalina.startup.VersionLoggerListener\"
    />\n  <!-- Security listener. Documentation at /docs/config/listeners.html\n  <Listener
    className=\"org.apache.catalina.security.SecurityListener\" />\n  -->\n  <!--APR
    library loader. Documentation at /docs/apr.html -->\n  <Listener className=\"org.apache.catalina.core.AprLifecycleListener\"
    SSLEngine=\"on\" />\n  <!--Initialize Jasper prior to webapps are loaded. Documentation
    at /docs/jasper-howto.html -->\n  <Listener className=\"org.apache.catalina.core.JasperListener\"
    />\n  <!-- Prevent memory leaks due to use of particular java/javax APIs-->\n
    \ <Listener className=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\"
    />\n  <Listener className=\"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\"
    />\n  <Listener className=\"org.apache.catalina.core.ThreadLocalLeakPreventionListener\"
    />\n\n  <!-- Global JNDI resources\n       Documentation at /docs/jndi-resources-howto.html\n
    \ -->\n  <GlobalNamingResources>\n    <!-- Editable user database that can also
    be used by\n         UserDatabaseRealm to authenticate users\n    -->\n    <Resource
    name=\"UserDatabase\" auth=\"Container\"\n              type=\"org.apache.catalina.UserDatabase\"\n
    \             description=\"User database that can be updated and saved\"\n              factory=\"org.apache.catalina.users.MemoryUserDatabaseFactory\"\n
    \             pathname=\"conf/tomcat-users.xml\" />\n  </GlobalNamingResources>\n\n
    \ <!-- A \"Service\" is a collection of one or more \"Connectors\" that share\n
    \      a single \"Container\" Note:  A \"Service\" is not itself a \"Container\",\n
    \      so you may not define subcomponents such as \"Valves\" at this level.\n
    \      Documentation at /docs/config/service.html\n   -->\n  <Service name=\"Catalina\">\n\n
    \   <!--The connectors can use a shared executor, you can define one or more named
    thread pools-->\n    <!--\n    <Executor name=\"tomcatThreadPool\" namePrefix=\"catalina-exec-\"\n
    \       maxThreads=\"150\" minSpareThreads=\"4\"/>\n    -->\n\n\n    <!-- A \"Connector\"
    represents an endpoint by which requests are received\n         and responses
    are returned. Documentation at :\n         Java HTTP Connector: /docs/config/http.html
    (blocking & non-blocking)\n         Java AJP  Connector: /docs/config/ajp.html\n
    \        APR (HTTP/AJP) Connector: /docs/apr.html\n         Define a non-SSL HTTP/1.1
    Connector on port 8080\n    -->\n    <Connector port=\"8080\" protocol=\"HTTP/1.1\"\n
    \              connectionTimeout=\"20000\"\n               redirectPort=\"8443\"
    />\n    <!-- A \"Connector\" using the shared thread pool-->\n    <!--\n    <Connector
    executor=\"tomcatThreadPool\"\n               port=\"8080\" protocol=\"HTTP/1.1\"\n
    \              connectionTimeout=\"20000\"\n               redirectPort=\"8443\"
    />\n    -->\n    <!-- Define a SSL HTTP/1.1 Connector on port 8443\n         This
    connector uses the BIO implementation that requires the JSSE\n         style configuration.
    When using the APR/native implementation, the\n         OpenSSL style configuration
    is required as described in the APR/native\n         documentation -->\n    <!--\n
    \   <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11Protocol\"\n
    \              maxThreads=\"150\" SSLEnabled=\"true\" scheme=\"https\" secure=\"true\"\n
    \              clientAuth=\"false\" sslProtocol=\"TLS\" />\n    -->\n\n    <!--
    Define an AJP 1.3 Connector on port 8009 -->\n    <Connector port=\"8009\" protocol=\"AJP/1.3\"
    redirectPort=\"8443\" />\n\n\n    <!-- An Engine represents the entry point (within
    Catalina) that processes\n         every request.  The Engine implementation for
    Tomcat stand alone\n         analyzes the HTTP headers included with the request,
    and passes them\n         on to the appropriate Host (virtual host).\n         Documentation
    at /docs/config/engine.html -->\n\n    <!-- You should set jvmRoute to support
    load-balancing via AJP ie :\n    <Engine name=\"Catalina\" defaultHost=\"localhost\"
    jvmRoute=\"jvm1\">\n    -->\n    <Engine name=\"Catalina\" defaultHost=\"localhost\">\n\n
    \     <!--For clustering, please take a look at documentation at:\n          /docs/cluster-howto.html
    \ (simple how to)\n          /docs/config/cluster.html (reference documentation)
    -->\n      <!--\n      <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/>\n
    \     -->\n\n      <!-- Use the LockOutRealm to prevent attempts to guess user
    passwords\n           via a brute-force attack -->\n      <Realm className=\"org.apache.catalina.realm.LockOutRealm\">\n
    \       <!-- This Realm uses the UserDatabase configured in the global JNDI\n
    \            resources under the key \"UserDatabase\".  Any edits\n             that
    are performed against this UserDatabase are immediately\n             available
    for use by the Realm.  -->\n        <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n
    \              resourceName=\"UserDatabase\"/>\n      </Realm>\n\n      <Host
    name=\"localhost\"  appBase=\"webapps\"\n            unpackWARs=\"true\" autoDeploy=\"true\">\n\n
    \       <Valve className=\"org.apache.catalina.valves.RemoteIpValve\"\n               remoteIpHeader=\"X-Real-IP\"\n
    \              requestAttributesEnabled=\"true\"\n               internalProxies=\"127\\.0\\.0\\.1\"
    \ />        \n\n        <!-- SingleSignOn valve, share authentication between
    web applications\n             Documentation at: /docs/config/valve.html -->\n
    \       <!--\n        <Valve className=\"org.apache.catalina.authenticator.SingleSignOn\"
    />\n        -->\n\n        <!-- Access log processes all example.\n             Documentation
    at: /docs/config/valve.html\n             Note: The pattern used is equivalent
    to using pattern=\"common\" -->\n        <Valve className=\"org.apache.catalina.valves.AccessLogValve\"
    directory=\"logs\"\n               prefix=\"localhost_access_log.\" suffix=\".txt\"\n
    \              pattern=\"%{org.apache.catalina.AccessLog.RemoteAddr}r %l %u %t &quot;%r&quot; %s %b\" />\n\n      </Host>\n
    \   </Engine>\n  </Service>\n</Server>\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: tomcat-server-config
